
# from nodemon
name: tests
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

name: Release
on:
  workflow_run:
    workflows: ['tests']
    branches: [main]
    types:
      - completed
  push:
    branches:
      - master

# From  semantic Release
name: Test
on:
  push:
    branches:
      - master
      # renovate/** branches are generated by https://github.com/apps/renovate
      - renovate/**

  pull_request:
    types:
      - opened
      - synchronize

name: Release
on:
  push:
    branches:
      - master
      - next
      - beta
      - "*.x" # maintenance releases branches

jobs:
  release:
    name: release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          cache: npm
      - run: npm ci
      - run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.SEMANTIC_RELEASE_BOT_NPM_TOKEN }}


## Good way to not run on doc updates
    paths-ignore:
      - 'docs/**'
      - '*.md'

## TS LIB
name: CI

on: pull_request

jobs:
  ci:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x]

name: Publish to NPM

on:
  release:
    types: [created]

jobs:
  publish-npm:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14
          registry-url: https://registry.npmjs.org/
      - run: npm i
      - run: node test/validateModuleExportsMatchCommonJS/index.js
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}


# good publish example
on: [push, pull_request]
name: Build, Test and maybe Publish
jobs:
  test:
    name: Build & Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x, 14.x]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Cache node_modules
      id: cache-modules
      uses: actions/cache@v1
      with:
        path: node_modules
        key: ${{ matrix.node-version }}-${{ runner.OS }}-build-${{ hashFiles('package.json') }}
    - name: Build
      if: steps.cache-modules.outputs.cache-hit != 'true'
      run: npm install
    - name: Test
      run: npm_config_yes=true npx best-test@latest
  publish:
    name: Publish
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && ( github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' )
    steps:
    - uses: actions/checkout@v2
    - name: Cache node_modules
      id: cache-modules
      uses: actions/cache@v1
      with:
        path: node_modules
        key: 12.x-${{ runner.OS }}-build-${{ hashFiles('package.json') }}
    - name: Build
      if: steps.cache-modules.outputs.cache-hit != 'true'
      run: npm install
    - name: Test
      run: npm_config_yes=true npx best-test@latest

    - name: Publish
      uses: mikeal/merge-release@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

